image: node:10.6.0

stages:
  - build_backend
  - test_backend
  - docker_backend
  - sonarqube
  - build_frontend
  - docker_frontend
  - run_images
  - test_frontend

build backend:
  stage: build_backend
  script:
    - cd webshop-service
    - ./gradlew build

unit test backend:
  stage: test_backend
  script:
    - cd webshop-service
    - ./gradlew check

build backend image:
  stage: docker_backend
  script:
    - docker rmi dockerjerseyimage
    - cd webshop-service
    - ./gradlew shadowJar
    - cd build\libs
    - docker build -t dockerjerseyimage .

sonarqube:
  stage: sonarqube
  script:
    - cd webshop-service
    - .\gradlew sonarqube

build frontend:
  image: node:6
  stage: build_frontend
  script:
    - cd webshop-client
    - npm install
    - npm run build

build frontend image:
  stage: docker_frontend
  script:
    - docker rmi dockervueimage
    - cd webshop-client
    - docker build -t dockervueimage .

run docker images:
  stage: run_images
  script:
    -docker run -it -p 2121:80 --rm  --name dockervueimage dockervueimage
    -docker run -itd -p 4545:4545 --rm --name dockerjerseyimage dockerjerseyimage

cypress test frontend:
  stage: test_frontend
  script:
    - npm install
    - npm run cypress:verify
    - npm run cypress:run